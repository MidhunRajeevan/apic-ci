swagger: '2.0'
info:
  title: Tokenization
  x-ibm-name: tokenization
  version: 1.0.0
x-ibm-configuration:
  cors:
    enabled: true
  gateway: datapower-api-gateway
  type: rest
  phase: realized
  enforced: true
  testable: true
  assembly:
    execute:
      - gatewayscript:
          version: 2.0.0
          title: gatewayscript
          source: >-

            var currentTime = new Date();


            // Format the current time as an ISO string

            var isoTime = currentTime.toISOString();


            // Set the current time in the context variable

            context.set('currentTime', isoTime);


            context.message.body.readAsJSON (function (error, json){

            if (error) {

            throw error;
                }
                
            //context.set('accountId',json.accountId);

            context.set('customerId',json.customerId);

            context.set('channel',json.channel);

            context.set('accountType',json.accountType);

            //context.set('cancellationReason',json.cancellationReason);


            // Use a simple SHA-256 hashing for demo (you may add salt for
            better security)

            var crypto = require('crypto');

            var hash =
            crypto.createHash('sha256').update(json.accountId).digest('hex');


            // Simulate token by prefixing

            var token = "tok_" + hash.substring(0, 16);


            // Save token to response (or save to secure store if you connect to
            external system)

            //context.set("token", token);

            context.set('accountId',token)

            });
      - xslt:
          version: 2.1.0
          title: xslt
          input: false
          serialize-output: false
          source: "<xsl:stylesheet xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\"       xmlns:dp=\"http://www.datapower.com/extensions\"       xmlns:apigw=\"http://www.ibm.com/xmlns/datapower/2017/11/apigateway\" extension-element-prefixes=\"dp\"       version=\"1.0\">\n    <xsl:variable name=\"request\" select=\"apigw:get-variable('request.body')\"/>\n      <xsl:template  match=\"/\">\n          <xsl:variable name=\"output\">\n               <soapenv:Envelope xmlns:apt=\"apt:AppointmentService\" xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\">\n                    <soapenv:Header/>\n                        <soapenv:Body>\n                        <apt:getGlobalServicesRequest>\n                            <xsl:if test=\"$request\">\n                            \t<apt:accountId><xsl:value-of select=\"apigw:get-variable('accountId')\"/></apt:accountId>\n                            \t<apt:customerId><xsl:value-of select=\"apigw:get-variable('customerId')\"/></apt:customerId>\n                            \t<apt:channel><xsl:value-of select=\"apigw:get-variable('channel')\"/></apt:channel>\n                            \t<apt:accountType><xsl:value-of select=\"apigw:get-variable('accountType')\"/></apt:accountType>\n                             </xsl:if>\n                              </apt:getGlobalServicesRequest>\n                            </soapenv:Body>\n                </soapenv:Envelope>\n            </xsl:variable>\n    <xsl:message dp:priority=\"error\">\n         XML Request is\n         <xsl:copy-of select=\"$output\"/>\n      </xsl:message>\n      <xsl:copy-of select=\"$output\"/>\n   </xsl:template>\n   <xsl:template match=\"node()|@*\">\n      <xsl:copy>\n         <xsl:apply-templates select=\"node()|@*\"/>\n      </xsl:copy>\n   </xsl:template>\n</xsl:stylesheet>"
          compile-settings: {}
  properties:
    target-url:
      value: http://example.com/operation-name
      description: The URL of the target service
      encoded: false
  activity-log:
    enabled: true
    success-content: activity
    error-content: payload
basePath: /v1
paths:
  /tokenization:
    post:
      consumes: []
      produces: []
      parameters:
        - name: Body
          in: body
          required: true
          description: ''
          schema:
            $ref: '#/definitions/request'
      responses:
        '200':
          description: ''
definitions:
  Error:
    title: Error
    type: object
    properties:
      status:
        title: status
        type: string
      error:
        title: error
        type: string
      description:
        title: description
        type: string
  request:
    title: request
    type: object
    properties:
      accountId:
        type: string
      customerId:
        type: string
      channel:
        type: string
      accountType:
        type: string
    required:
      - accountId
      - customerId
      - channel
      - accountType
schemes:
  - https
